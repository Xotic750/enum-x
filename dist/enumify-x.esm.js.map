{"version":3,"sources":["../src/enumify-x.js"],"names":[],"mappings":"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","file":"enumify-x.esm.js","sourcesContent":["import arrayForEach from 'array-for-each-x';\nimport {MapConstructor, SetConstructor} from 'collections-x';\nimport isArrayLike from 'is-array-like-x';\nimport isObjectLike from 'is-object-like-x';\nimport isSafeInteger from 'is-safe-integer-x';\nimport isSymbol from 'is-symbol';\nimport isVarName from 'is-var-name';\nimport {stringify} from 'json3';\nimport objectCreate from 'object-create-x';\nimport defineProperties from 'object-define-properties-x';\nimport defineProperty from 'object-define-property-x';\nimport objectKeys from 'object-keys-x';\nimport toStr from 'to-string-x';\n\nconst {push, join, shift} = [];\nconst nativeFreeze = {}.constructor.freeze;\nconst hasFreeze = typeof nativeFreeze === 'function';\n\n/**\n * The freeze() method freezes an object. A frozen object can no longer be changed; freezing an object prevents new properties\n * from being added to it, existing properties from being removed, prevents changing the enumerability, configurability,\n * or writability of existing properties, and prevents the values of existing properties from being changed. In addition,\n * freezing an object also prevents its prototype from being changed. Freeze() returns the same object that was passed in.\n *\n * @param {*} value - The object to freeze.\n * @returns {*} - The object that was passed to the function.\n */\nconst objectFreeze = function freeze(value) {\n  return hasFreeze ? nativeFreeze(value) : value;\n};\n\n/** @type {Set<string>} */\nconst reserved = new SetConstructor(['forEach', 'name', 'toJSON', 'toString', 'value', 'valueOf']);\n\nconst assertReserved = function assertReserved(strName) {\n  if (reserved.has(strName)) {\n    throw new SyntaxError(`Name is reserved: ${strName}`);\n  }\n\n  return strName;\n};\n\n/**\n * An enumeration is a set of symbolic names (members) bound to unique, constant\n * values. Within an enumeration, the members can be compared by identity, and\n * the enumeration itself can be iterated over.\n * Influenced by Python's Enum implementation.\n *\n * Create an enum name/value. Not usually called directly.\n *\n * @see @link https://docs.python.org/3/library/enum.html\n * @param {string} name - The name of the enum.\n * @param {*} value - The value of the enum.\n * @returns {object} The enum.\n */\nexport default function Enum(name, value) {\n  if (arguments.length > 0) {\n    const strName = assertReserved(isSymbol(name) === false && toStr(name));\n\n    defineProperties(this, {\n      name: {\n        enumerable: true,\n        value: strName,\n      },\n      value: {\n        enumerable: true,\n        value,\n      },\n    });\n\n    objectFreeze(this);\n  }\n}\n\ndefineProperties(Enum.prototype, {\n  toJSON: {\n    value: function toJSON() {\n      return {\n        name: this.name,\n        value: this.value,\n      };\n    },\n  },\n  toString: {\n    value: function toString() {\n      return `${this.constructor.name}.${this.name}`;\n    },\n  },\n});\n\nconst generateNextValue = function generateNextValue() {\n  let count = 0;\n\n  // noinspection JSValidateTypes\n  return {\n    next(name, value) {\n      if (isSafeInteger(value)) {\n        count = value;\n      }\n\n      const result = count;\n\n      count += 1;\n\n      return result;\n    },\n  };\n};\n\nconst getItemsObject = function getItemsObject(isClone, properties) {\n  if (isClone) {\n    return properties.toJSON();\n  }\n\n  throw new Error('bad args');\n};\n\nconst getItems = function getItems(properties) {\n  if (isArrayLike(properties)) {\n    return {\n      isClone: false,\n      items: properties,\n    };\n  }\n\n  const isClone = typeof properties === 'function' && properties.prototype instanceof Enum;\n\n  return {\n    isClone,\n    items: getItemsObject(isClone, properties),\n  };\n};\n\nconst assertReuse = function assertReuse(results, name) {\n  if (results.names.has(name)) {\n    throw new TypeError(`Attempted to reuse name: ${name}`);\n  }\n\n  return results;\n};\n\nconst getIdent = function getIdent(obj) {\n  const {results, value, name, opts} = obj;\n  const oName = results.values.get(value);\n\n  if (opts.unique) {\n    throw new TypeError(`Duplicate value (${value}) found: ${name} -> ${oName}`);\n  }\n\n  return results.names.get(oName);\n};\n\nconst initResults = function initResults() {\n  return {\n    keys: new SetConstructor(),\n    names: new MapConstructor(),\n    values: new MapConstructor(),\n  };\n};\n\n/**\n * Initialise a new enum.\n *\n * @param {object} obj - Parameter for initialisation.\n * @property {Function} obj.CstmCtr - The custom constructor.\n * @property {Array|Enum} obj.properties - The properties.\n * @property {!object} obj.opts - The options.\n * @returns {{names: Map<name,object>, keys: Set<string>, values: Map<name,*>}} - Initialised variables.\n */\nconst initialise = function initialise(obj) {\n  const {CstmCtr, properties, opts} = obj;\n  const results = initResults();\n\n  const {isClone, items} = getItems(properties);\n  const iter = typeof opts.auto === 'function' ? opts.auto() : generateNextValue();\n  let next;\n\n  arrayForEach(items, function iteratee(item) {\n    let ident;\n\n    if (isClone || isObjectLike(item)) {\n      next = iter.next(item.name, item.value);\n      ident = new CstmCtr(item.name, item.value);\n    } else {\n      next = iter.next(item);\n      ident = new CstmCtr(item, next);\n    }\n\n    const {name, value} = ident;\n    assertReuse(results, name).names.set(name, ident);\n\n    if (results.values.has(value)) {\n      ident = getIdent({results, value, name, opts});\n    } else {\n      results.values.set(value, name);\n      results.keys.add(name);\n    }\n\n    defineProperty(CstmCtr, name, {\n      enumerable: true,\n      value: ident,\n    });\n  });\n\n  return results;\n};\n\n/**\n * Get a string representation of the enum.\n *\n * @param {string} ctrName - The constructor name.\n * @param {Map} names - The dnames map.\n * @returns {string} - The string representation.\n */\nconst calcString = function calcString(ctrName, names) {\n  const strArr = [];\n  names.forEach(function iteratee(enumMember) {\n    push.call(strArr, stringify(enumMember.name));\n  });\n\n  return `${ctrName} { ${join.call(strArr, ', ')} }`;\n};\n\nconst definePrototype = function definePrototype(constructionProps) {\n  constructionProps.CstmCtr.prototype = objectCreate(Enum.prototype);\n  defineProperties(constructionProps.CstmCtr.prototype, {\n    constructor: {value: constructionProps.CstmCtr},\n    name: {value: constructionProps.ctrName},\n  });\n};\n\nconst getNext = function getNext(iter, constructionProps) {\n  return function next() {\n    const nxt = iter.next();\n\n    return nxt.done\n      ? nxt\n      : {\n          done: false,\n          value: constructionProps.data.names.get(nxt.value),\n        };\n  };\n};\n\nconst defineIterator = function defineIterator(constructionProps) {\n  /* eslint-disable-next-line compat/compat */\n  if (typeof Symbol === 'function' && isSymbol(Symbol(''))) {\n    /* eslint-disable-next-line compat/compat */\n    defineProperty(constructionProps.CstmCtr, Symbol.iterator, {\n      value: function iterator() {\n        /* eslint-disable-next-line compat/compat */\n        const iter = constructionProps.data.keys[Symbol.iterator]();\n\n        return {\n          next: getNext(iter, constructionProps),\n        };\n      },\n    });\n  }\n};\n\nconst defineClassMethods = function defineClassMethods(constructionProps, opts) {\n  if (isObjectLike(opts.classMethods)) {\n    arrayForEach(objectKeys(opts.classMethods), function iteratee(key) {\n      if (reserved.has(key)) {\n        throw new SyntaxError(`Name is reserved: ${key}`);\n      }\n\n      const method = opts.classMethods[key];\n\n      if (typeof method === 'function') {\n        defineProperty(constructionProps.CstmCtr, key, {value: method});\n        reserved.add(key);\n      }\n    });\n  }\n};\n\nconst defineInstanceMethods = function defineInstanceMethods(constructionProps, opts) {\n  if (isObjectLike(opts.instanceMethods)) {\n    arrayForEach(objectKeys(opts.instanceMethods), function iteratee(key) {\n      if (reserved.has(key)) {\n        throw new SyntaxError(`Name is reserved: ${key}`);\n      }\n\n      const method = opts.instanceMethods[key];\n\n      if (typeof method === 'function') {\n        defineProperty(constructionProps.CstmCtr.prototype, key, {value: method});\n        reserved.add(key);\n      }\n    });\n  }\n};\n\nconst defineCstmCtr = function defineCstmCtr(constructionProps) {\n  let asString;\n  defineProperties(constructionProps.CstmCtr, {\n    forEach: {\n      value: function forEach(callback, thisArg) {\n        constructionProps.data.keys.forEach(function iteratee(key) {\n          callback.call(thisArg, constructionProps.data.names.get(key));\n        });\n      },\n    },\n\n    toJSON: {\n      value: function toJSON() {\n        const value = [];\n        constructionProps.data.names.forEach(function iteratee(enumMember) {\n          push.call(value, enumMember.toJSON());\n        });\n\n        return value;\n      },\n    },\n\n    toString: {\n      value: function toString() {\n        if (typeof asString === 'undefined') {\n          asString = calcString(constructionProps.ctrName, constructionProps.data.names);\n        }\n\n        return asString;\n      },\n    },\n  });\n};\n\nconst getConstruct = function getConstruct(constructionProps) {\n  return function construct(context, args) {\n    const argsArr = [...args];\n\n    if (constructionProps.data) {\n      if (isObjectLike(context) && context instanceof constructionProps.CstmCtr) {\n        throw new SyntaxError('Enum classes can’t be instantiated');\n      }\n\n      return constructionProps.data.names.get(constructionProps.data.values.get(shift.call(argsArr)));\n    }\n\n    Enum.apply(context, argsArr);\n\n    return context;\n  };\n};\n\nconst getConstructionProps = function getConstructionProps(typeName) {\n  const props = {\n    CstmCtr: null,\n    ctrName: isSymbol(typeName) === false && toStr(typeName),\n    data: null,\n  };\n\n  if (props.ctrName === 'undefined' || isVarName(props.ctrName) === false) {\n    throw new Error(`Invalid enum name: ${props.ctrName}`);\n  }\n\n  return props;\n};\n\ndefineProperties(Enum, {\n  /**\n   * Creates an enumeration collection. Primary method.\n   *\n   * @param {string} typeName - The name of the enum collection.\n   * @param {Array} properties - Initialiser array.\n   * @param {object} options - Options to determine behaviour.\n   * @returns {Function} The enumeration collection.\n   */\n  create: {\n    value: function create(typeName, properties, options) {\n      const constructionProps = getConstructionProps(typeName);\n\n      /* eslint-disable-next-line no-new-func */\n      constructionProps.CstmCtr = Function(\n        'construct',\n        `return function ${constructionProps.ctrName}(value){return construct(this,arguments)}`,\n      )(getConstruct(constructionProps));\n\n      const opts = isObjectLike(options) ? options : {};\n      defineCstmCtr(constructionProps);\n      definePrototype(constructionProps);\n      defineIterator(constructionProps);\n      defineClassMethods(constructionProps, opts);\n      defineInstanceMethods(constructionProps, opts);\n      constructionProps.data = initialise({CstmCtr: constructionProps.CstmCtr, properties, opts});\n\n      return objectFreeze(constructionProps.CstmCtr);\n    },\n  },\n});\n"]}