{"version":3,"sources":["webpack://EnumifyX/webpack/universalModuleDefinition","webpack://EnumifyX/webpack/bootstrap","webpack://EnumifyX/./src/index.js","webpack://EnumifyX/./node_modules/lodash/isArrayLike.js","webpack://EnumifyX/./node_modules/lodash/isFunction.js","webpack://EnumifyX/./node_modules/lodash/_baseGetTag.js","webpack://EnumifyX/./node_modules/lodash/isObject.js","webpack://EnumifyX/./node_modules/lodash/isLength.js","webpack://EnumifyX/./node_modules/lodash/isObjectLike.js","webpack://EnumifyX/./node_modules/is-var-name/index.mjs","webpack://EnumifyX/./node_modules/is-symbol/index.js","webpack://EnumifyX/./node_modules/has-symbols/index.js","webpack://EnumifyX/(webpack)/buildin/global.js","webpack://EnumifyX/./node_modules/has-symbols/shams.js"],"names":["root","factory","exports","module","define","amd","self","window","global","Function","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","_isArrayLike","_interopRequireDefault","_isObjectLike","_isVarName","_isSymbol","reserved","Set","Enum","arguments","length","strName","default","String","has","SyntaxError","concat","defineProperties","this","freeze","toJSON","toString","constructor","generateNextValue","count","next","Number","isSafeInteger","result","initialise","CstmCtr","properties","opts","isClone","items","keys","dNames","Map","dValues","Error","iter","auto","forEach","item","ident","TypeError","set","oName","unique","here","add","names","values","calcString","ctrName","_this","strArr","enumMember","_newArrowCheck","push","JSON","stringify","join","typeName","options","_this4","data","construct","context","args","argsArr","_toConsumableArray","shift","apply","asString","eval","callback","thisArg","_this2","_this3","iterator","nxt","done","classMethods","method","instanceMethods","isFunction","isLength","baseGetTag","isObject","asyncTag","funcTag","genTag","proxyTag","tag","nativeObjectToString","type","MAX_SAFE_INTEGER","isVarName","str","trim","e","__webpack_exports__","toStr","symToStr","symStringRegex","valueOf","test","isSymbolObject","origSymbol","hasSymbolSham","g","getOwnPropertySymbols","obj","sym","symObj","getOwnPropertyNames","syms","propertyIsEnumerable","getOwnPropertyDescriptor","descriptor"],"mappings":"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","file":"enumify-x.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"EnumifyX\"] = factory();\n\telse\n\t\troot[\"EnumifyX\"] = factory();\n})((function () {\n  'use strict';\n\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n\n  return Function('return this')();\n}()), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import isArrayLike from 'lodash/isArrayLike';\nimport isObjectLike from 'lodash/isObjectLike';\nimport isVarName from 'is-var-name';\nimport isSymbol from 'is-symbol';\n\nconst reserved = new Set(['forEach', 'name', 'toJSON', 'toString', 'value', 'valueOf']);\n\n/**\n * An enumeration is a set of symbolic names (members) bound to unique, constant\n * values. Within an enumeration, the members can be compared by identity, and\n * the enumeration itself can be iterated over.\n * Influenced by Python's Enum implementation.\n *\n * Create an enum name/value. Not usually called directly.\n *\n * @see @link https://docs.python.org/3/library/enum.html\n * @param {string} name - The name of the enum.\n * @param {*} value - The value of the enum.\n * @returns {Object} The enum.\n */\nexport default function Enum(name, value) {\n  if (arguments.length > 0) {\n    const strName = isSymbol(name) === false && String(name);\n\n    if (reserved.has(strName)) {\n      throw new SyntaxError(`Name is reserved: ${strName}`);\n    }\n\n    Object.defineProperties(this, {\n      name: {\n        enumerable: true,\n        value: strName,\n      },\n      value: {\n        enumerable: true,\n        value,\n      },\n    });\n\n    Object.freeze(this);\n  }\n}\n\nObject.defineProperties(Enum.prototype, {\n  toJSON: {\n    value: function toJSON() {\n      return {\n        name: this.name,\n        value: this.value,\n      };\n    },\n  },\n  toString: {\n    value: function toString() {\n      return `${this.constructor.name}.${this.name}`;\n    },\n  },\n});\n\nconst generateNextValue = function _generateNextValue() {\n  let count = 0;\n\n  return {\n    next(name, value) {\n      if (Number.isSafeInteger(value)) {\n        count = value;\n      }\n\n      const result = count;\n\n      count += 1;\n\n      return result;\n    },\n  };\n};\n\nconst initialise = function _initialise(CstmCtr, properties, opts) {\n  const keys = new Set();\n  const dNames = new Map();\n  const dValues = new Map();\n  let isClone;\n  let items;\n\n  if (isArrayLike(properties)) {\n    items = properties;\n  } else if (typeof properties === 'function' && properties.prototype instanceof Enum) {\n    isClone = true;\n    items = properties.toJSON();\n  } else {\n    throw new Error('bad args');\n  }\n\n  const iter = typeof opts.auto === 'function' ? opts.auto() : generateNextValue();\n  let next;\n\n  const itemsIteratee = function _itemsIteratee(item) {\n    let ident;\n\n    if (isClone || isObjectLike(item)) {\n      next = iter.next(item.name, item.value);\n      ident = new CstmCtr(item.name, item.value);\n    } else {\n      next = iter.next(item);\n      ident = new CstmCtr(item, next);\n    }\n\n    const {name} = ident;\n\n    if (dNames.has(name)) {\n      throw new TypeError(`Attempted to reuse name: ${name}`);\n    }\n\n    dNames.set(name, ident);\n    const {value} = ident;\n\n    if (dValues.has(value)) {\n      const oName = dValues.get(value);\n\n      if (opts.unique) {\n        const here = `${name} -> ${oName}`;\n\n        throw new TypeError(`Duplicate value (${value}) found: ${here}`);\n      }\n\n      ident = dNames.get(oName);\n    } else {\n      dValues.set(value, name);\n      keys.add(name);\n    }\n\n    Object.defineProperty(CstmCtr, name, {\n      enumerable: true,\n      value: ident,\n    });\n  };\n\n  items.forEach(itemsIteratee);\n\n  return {\n    keys,\n    names: dNames,\n    values: dValues,\n  };\n};\n\nconst calcString = function _calcString(ctrName, names) {\n  const strArr = [];\n  names.forEach((enumMember) => {\n    strArr.push(JSON.stringify(enumMember.name));\n  });\n\n  return `${ctrName} { ${strArr.join(', ')} }`;\n};\n\nObject.defineProperties(Enum, {\n  /**\n   * Creates an enumeration collection. Primary method.\n   *\n   * @param {string} typeName - The name of the enum collection.\n   * @param {Array} properties - Initialiser array.\n   * @param {Object} options - Options to determine behaviour.\n   * @returns {Function} The enumeration collection.\n   * @example\n   * var Enum = require('enumify-x');\n   *\n   * // Creating an Enum\n   * // Example allows duplicate values, known as aliases.\n   * // Member values can be anything: number, string, etc.. If the exact value is\n   * // unimportant you may use auto instances and an appropriate value will be\n   * // chosen for you. Care must be taken if you mix auto with other values.\n   * //\n   * // The class Color is an enumeration (or enum)\n   * // The attributes Color.RED, Color.GREEN, etc., are enumeration members\n   * // (or enum members) and are functionally constants.\n   * // The enum members have names and values (the name of Color.RED is RED,\n   * // value of Color.BLUE is 10, etc.)\n   * var Color = Enum.create('Color', [\n   *   'RED', // auto assign value, starting 0\n   *   'YELLOW', // auto assign value, will be 1\n   *   { name: 'BLUE', value: 10 },\n   *   'PINK', // auto assign value, will be 11\n   *   { name: 'BLACK', value: 1 } // This is an alias for YELLOW\n   * ]);\n   *\n   * Color.YELLOW; // { name: 'YELLOW', value: 1 }\n   * Color.BLUE.name; // 'BLUE'\n   * Color.BLUE.value; // 10\n   * Color.BLACK === Color.YELLOW; // true\n   * // Enumeration members have human readable string representations.\n   * Color.PINK.toString(); // 'Color.PINK'\n   * // Enums also have a human readable string representations.\n   * Color.toString(); // 'Color { \"RED\", \"YELLOW\", \"BLUE\", \"PINK\", \"BLACK\" }'\n   * // The type of an enumeration member is the enumeration it belongs to.\n   * Color.PINK instanceof Color; // true\n   * // You can access by value too.\n   * Color(10); // Color.BLUE\n   *\n   * // Enumeration members are hashable, so they can be used as property names.\n   * var apples = {};\n   * apples[Color.RED] = 'Red Delicious';\n   * apples[Color.YELLOW] = 'Golden Delicious'\n   * apples; // {Color.RED: 'Red Delicious', Color.YELLOW: 'Golden Delicious'}\n   *\n   * // Having two enum members with the same name is invalid\n   * var Fail = Enum.create('Fail', [\n   *   'RED',\n   *   'RED',\n   * ], opts);\n   *\n   * // However, two enum members are allowed to have the same value. Given two\n   * // members A and B with the same value (and A defined first), B is an alias\n   * // to A. By-value lookup of the value of A and B will return A. By-name\n   * // lookup of B will also return A. as seen in the definition of Color.\n   *\n   * // No aliases are allowed in this example.\n   * var opts = {\n   *   unique: true\n   * };\n   *\n   * var Color1 = Enum.create('Color1', [\n   *   'RED',\n   *   'YELLOW',\n   * ], opts);\n   *\n   * // Depending on the value types used, enumerations are serialisable.\n   * JSON.stringify(Color1); // '[{\"name\":\"RED\",\"value\":0},{\"name\":\"YELLOW\",\"value\":1}]'\n   *\n   * // Enumerations support iteration, in definition order.\n   * // The forEach() method executes a provided function once per each\n   * // name/value pair in the Enum object, in insertion order.\n   * // Iterating over the members of an enum does not provide the aliases.\n   * Color1.forEach(function (enumMember) {\n   *   console.log(enumMember.name, enumMember.value)\n   * }, thisArg);\n   *\n   * // Where supported, for..of can be used.\n   * // Iterating over the members of an enum does not provide the aliases.\n   * for (const { name, value } of Color1) {\n   *   console.log(name, value);\n   * }\n   *\n   * // Otherwise, standard iterator pattern.\n   * // Iterating over the members of an enum does not provide the aliases.\n   * var iter = Color1[Symbol.iterator]();\n   * var next = iter.next();\n   * while (next.done === false) {\n   *   var enumMember = next.value;\n   *   console.log(enumMember.name, enumMember.value)\n   *   next = iter.next();\n   * }\n   *\n   * // To iterate all items, including aliases.\n   * var allenumMembers = Color1.toJSON();\n   * allenumMembers.forEach(function(enumMember) {\n   *    console.log(enumMember.name, enumMember.value);\n   * });\n   *\n   * // Lookups can be perfomed on the value and not just the name.\n   * Color1(0) === Color1.RED; // true\n   * Color1(1) === Color1['YELLOW']; // true\n   *\n   * // Values can be anything, but names must be a string.\n   * var anotherEnum = Enum.create('anotherEnum', [\n   *   { name: 'OBJECT', value: {} },\n   *   { name: 'ARRAY', value: [] },\n   *   { name: 'FUNCTION', value: function () {} }\n   * ]);\n   *\n   * // Enums can be cloned\n   * var cloneEnum = Enum.create('cloneEnum', anotherEnum);\n   * cloneEnum === anotherEnum; // false\n   * cloneEnum.OBJECT === anotherEnum.OBJECT; // false\n   * cloneEnum.OBJECT.name === anotherEnum.OBJECT.name; // true\n   * cloneEnum.OBJECT.value === anotherEnum.OBJECT.value; // true\n   *\n   * // Options\n   * // unique: {boolean} - whether aliases are allowed.\n   * // auto: {Function} - if you wish to define your own auto value allocation.\n   * // classMethods: {Object<Function>} - to defined methods on the enum.\n   * // instanceMethods: {Object<Function>} - to defined methods on the enum members.\n   *\n   * // ------------------------------------------------------\n   *\n   * var opts1 = {\n   *   auto: function () {\n   *     return {\n   *       next: function (name, value) {\n   *         return name;\n   *       }\n   *     };\n   *   }\n   * };\n   *\n   * var subject1 = Enum.create('subject1', ['RED'], opts1);\n   * subject1.RED; // { name: 'RED', value: 'RED'}\n   *\n   * // ------------------------------------------------------\n   *\n   * var opts2 = {\n   *   classMethods: {\n   *     favourite: function () {\n   *       return this.RED;\n   *     }\n   *   }\n   * };\n   *\n   * var subject2 = Enum.create('subject2', ['RED'], opts2);\n   * subject2.favourite() === subject2.RED; // true\n   *\n   * // ------------------------------------------------------\n   *\n   * var opts3 = {\n   *   instanceMethods: {\n   *     description: function () {\n   *       return 'Description: ' + this.toString();\n   *     }\n   *   }\n   * };\n   *\n   * var subject3 = Enum.create('subject3', ['RED'], opts3);\n   * subject3.RED.description()) === 'Description: subject3.RED'; // true\n   */\n  create: {\n    value: function create(typeName, properties, options) {\n      const ctrName = isSymbol(typeName) === false && String(typeName);\n\n      if (ctrName === 'undefined' || isVarName(ctrName) === false) {\n        throw new Error(`Invalid enum name: ${ctrName}`);\n      }\n\n      const opts = isObjectLike(options) ? options : {};\n      let CstmCtr;\n      let data;\n\n      // eslint-disable-next-line no-unused-vars\n      const construct = function _construct(context, args) {\n        const argsArr = [...args];\n\n        if (data) {\n          if (isObjectLike(context) && context instanceof CstmCtr) {\n            throw new SyntaxError('Enum classes can’t be instantiated');\n          }\n\n          return data.names.get(data.values.get(argsArr.shift()));\n        }\n\n        Enum.apply(context, argsArr);\n\n        return context;\n      };\n\n      // eslint-disable-next-line no-eval\n      CstmCtr = eval(`(0,function ${ctrName}(value){return construct(this,arguments)})`);\n\n      let asString;\n      Object.defineProperties(CstmCtr, {\n        forEach: {\n          value: function forEach(callback, thisArg) {\n            data.keys.forEach((key) => {\n              callback.call(thisArg, data.names.get(key));\n            });\n          },\n        },\n\n        toJSON: {\n          value: function toJSON() {\n            const value = [];\n            data.names.forEach((enumMember) => {\n              value.push(enumMember.toJSON());\n            });\n\n            return value;\n          },\n        },\n\n        toString: {\n          value: function toString() {\n            if (typeof asString === 'undefined') {\n              asString = calcString(ctrName, data.names);\n            }\n\n            return asString;\n          },\n        },\n      });\n\n      Object.defineProperty(CstmCtr, Symbol.iterator, {\n        value: function iterator() {\n          const iter = data.keys[Symbol.iterator]();\n          const $next = function next() {\n            const nxt = iter.next();\n\n            return nxt.done\n              ? nxt\n              : {\n                  done: false,\n                  value: data.names.get(nxt.value),\n                };\n          };\n\n          return {\n            next: $next,\n          };\n        },\n      });\n\n      CstmCtr.prototype = Object.create(Enum.prototype);\n      Object.defineProperties(CstmCtr.prototype, {\n        constructor: {value: CstmCtr},\n        name: {value: ctrName},\n      });\n\n      if (isObjectLike(opts.classMethods)) {\n        Object.keys(opts.classMethods).forEach((key) => {\n          if (reserved.has(key)) {\n            throw new SyntaxError(`Name is reserved: ${key}`);\n          }\n\n          const method = opts.classMethods[key];\n\n          if (typeof method === 'function') {\n            Object.defineProperty(CstmCtr, key, {value: method});\n            reserved.add(key);\n          }\n        });\n      }\n\n      if (isObjectLike(opts.instanceMethods)) {\n        Object.keys(opts.instanceMethods).forEach((key) => {\n          if (reserved.has(key)) {\n            throw new SyntaxError(`Name is reserved: ${key}`);\n          }\n\n          const method = opts.instanceMethods[key];\n\n          if (typeof method === 'function') {\n            Object.defineProperty(CstmCtr.prototype, key, {value: method});\n            reserved.add(key);\n          }\n        });\n      }\n\n      data = initialise(CstmCtr, properties, opts);\n\n      return Object.freeze(CstmCtr);\n    },\n  },\n});\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","/*!\n * is-var-name | ISC (c) Shinnosuke Watanabe\n * https://github.com/shinnn/is-var-name\n*/\nexport default function isVarName(str) {\n\tif (typeof str !== 'string') {\n\t\treturn false;\n\t}\n\n\tif (str.trim() !== str) {\n\t\treturn false;\n\t}\n\n\ttry {\n\t\tnew Function(str, 'var ' + str);\n\t} catch (e) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n","'use strict';\n\nvar toStr = Object.prototype.toString;\nvar hasSymbols = require('has-symbols')();\n\nif (hasSymbols) {\n\tvar symToStr = Symbol.prototype.toString;\n\tvar symStringRegex = /^Symbol\\(.*\\)$/;\n\tvar isSymbolObject = function isRealSymbolObject(value) {\n\t\tif (typeof value.valueOf() !== 'symbol') {\n\t\t\treturn false;\n\t\t}\n\t\treturn symStringRegex.test(symToStr.call(value));\n\t};\n\n\tmodule.exports = function isSymbol(value) {\n\t\tif (typeof value === 'symbol') {\n\t\t\treturn true;\n\t\t}\n\t\tif (toStr.call(value) !== '[object Symbol]') {\n\t\t\treturn false;\n\t\t}\n\t\ttry {\n\t\t\treturn isSymbolObject(value);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n} else {\n\n\tmodule.exports = function isSymbol(value) {\n\t\t// this environment does not support Symbols.\n\t\treturn false && value;\n\t};\n}\n","'use strict';\n\nvar origSymbol = global.Symbol;\nvar hasSymbolSham = require('./shams');\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","'use strict';\n\n/* eslint complexity: [2, 17], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n"],"sourceRoot":""}