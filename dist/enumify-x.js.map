{"version":3,"sources":["webpack://EnumifyX/webpack/universalModuleDefinition","webpack://EnumifyX/webpack/bootstrap","webpack://EnumifyX/./src/index.js","webpack://EnumifyX/./node_modules/lodash/isArrayLike.js","webpack://EnumifyX/./node_modules/lodash/isFunction.js","webpack://EnumifyX/./node_modules/lodash/_baseGetTag.js","webpack://EnumifyX/./node_modules/lodash/isObject.js","webpack://EnumifyX/./node_modules/lodash/isLength.js","webpack://EnumifyX/./node_modules/lodash/isObjectLike.js","webpack://EnumifyX/./node_modules/is-var-name/index.mjs","webpack://EnumifyX/./node_modules/js-logger/src/logger.js"],"names":["reserved","Set","Enum","name","value","arguments","length","strName","String","has","SyntaxError","Object","defineProperties","enumerable","freeze","prototype","toJSON","toString","constructor","generateNextValue","_generateNextValue","count","next","Number","isSafeInteger","result","initialise","_initialise","CstmCtr","properties","opts","keys","dNames","Map","dValues","isClone","items","Error","iter","auto","itemsIteratee","_itemsIteratee","item","ident","TypeError","set","oName","get","unique","here","add","defineProperty","forEach","names","values","calcString","_calcString","ctrName","strArr","enumMember","push","JSON","stringify","join","create","typeName","options","data","construct","_construct","context","args","argsArr","shift","apply","eval","asString","callback","thisArg","key","call","_toString","Symbol","iterator","$next","nxt","done","classMethods","method","instanceMethods"],"mappings":"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;AAEA;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC9BA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,aAAa,QAAQ;AACrB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC5BA;AAAA;AAAA;AACA;AACA;AACA;AACe;AACf;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,EAAE;AACF;AACA;;AAEA;AACA;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe;;AAEf;AACA;;AAEA;AACA;;AAEA,8CAA8C;AAC9C;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4CAA4C;AAC5C;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,oDAAoD;AACpD;AACA;AACA;AACA;AACA,uBAAuB;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,+BAA+B,eAAe;AAC9C;AACA;AACA;;AAEA;AACA,0CAA0C,0BAA0B;;AAEpE;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mEAAmE,aAAa;AAChF;;AAEA;AACA,sDAAsD;AACtD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB;AACvB;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK,IAA0C;AAC/C,EAAE,oCAAO,MAAM;AAAA;AAAA;AAAA;AAAA,oGAAC;AAChB;AACA,MAAM,EAYJ;AACF,CAAC","file":"enumify-x.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"EnumifyX\"] = factory();\n\telse\n\t\troot[\"EnumifyX\"] = factory();\n})((function () {\n  'use strict';\n\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n\n  return Function('return this')();\n}()), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import isArrayLike from 'lodash/isArrayLike';\nimport isObjectLike from 'lodash/isObjectLike';\nimport isVarName from 'is-var-name';\n\nconst reserved = new Set(['forEach', 'name', 'toJSON', 'toString', 'value', 'valueOf']);\n\n/**\n * An enumeration is a set of symbolic names (members) bound to unique, constant\n * values. Within an enumeration, the members can be compared by identity, and\n * the enumeration itself can be iterated over.\n * Influenced by Python's Enum implementation.\n *\n * Create an enum name/value. Not usually called directly.\n *\n * @see @link https://docs.python.org/3/library/enum.html\n * @param {string} name - The name of the enum.\n * @param {*} value - The value of the enum.\n * @returns {Object} The enum.\n */\nexport default function Enum(name, value) {\n  if (arguments.length > 0) {\n    const strName = String(name);\n\n    if (reserved.has(strName)) {\n      throw new SyntaxError(`Name is reserved: ${strName}`);\n    }\n\n    Object.defineProperties(this, {\n      name: {\n        enumerable: true,\n        value: strName,\n      },\n      value: {\n        enumerable: true,\n        value,\n      },\n    });\n\n    Object.freeze(this);\n  }\n}\n\nObject.defineProperties(Enum.prototype, {\n  toJSON: {\n    value: function toJSON() {\n      return {\n        name: this.name,\n        value: this.value,\n      };\n    },\n  },\n  toString: {\n    value: function toString() {\n      return `${this.constructor.name}.${this.name}`;\n    },\n  },\n});\n\nconst generateNextValue = function _generateNextValue() {\n  let count = 0;\n\n  return {\n    next(name, value) {\n      if (Number.isSafeInteger(value)) {\n        count = value;\n      }\n\n      const result = count;\n\n      count += 1;\n\n      return result;\n    },\n  };\n};\n\nconst initialise = function _initialise(CstmCtr, properties, opts) {\n  const keys = new Set();\n  const dNames = new Map();\n  const dValues = new Map();\n  let isClone;\n  let items;\n\n  if (isArrayLike(properties)) {\n    items = properties;\n  } else if (typeof properties === 'function' && properties.prototype instanceof Enum) {\n    isClone = true;\n    items = properties.toJSON();\n  } else {\n    throw new Error('bad args');\n  }\n\n  const iter = typeof opts.auto === 'function' ? opts.auto() : generateNextValue();\n  let next;\n\n  const itemsIteratee = function _itemsIteratee(item) {\n    let ident;\n\n    if (isClone || isObjectLike(item)) {\n      next = iter.next(item.name, item.value);\n      ident = new CstmCtr(item.name, item.value);\n    } else {\n      next = iter.next(item);\n      ident = new CstmCtr(item, next);\n    }\n\n    const {name} = ident;\n\n    if (dNames.has(name)) {\n      throw new TypeError(`Attempted to reuse name: ${name}`);\n    }\n\n    dNames.set(name, ident);\n    const {value} = ident;\n\n    if (dValues.has(value)) {\n      const oName = dValues.get(value);\n\n      if (opts.unique) {\n        const here = `${name} -> ${oName}`;\n\n        throw new TypeError(`Duplicate value (${value}) found: ${here}`);\n      }\n\n      ident = dNames.get(oName);\n    } else {\n      dValues.set(value, name);\n      keys.add(name);\n    }\n\n    Object.defineProperty(CstmCtr, name, {\n      enumerable: true,\n      value: ident,\n    });\n  };\n\n  items.forEach(itemsIteratee);\n\n  return {\n    keys,\n    names: dNames,\n    values: dValues,\n  };\n};\n\nconst calcString = function _calcString(ctrName, names) {\n  const strArr = [];\n  names.forEach((enumMember) => {\n    strArr.push(JSON.stringify(enumMember.name));\n  });\n\n  return `${ctrName} { ${strArr.join(', ')} }`;\n};\n\nObject.defineProperties(Enum, {\n  /**\n   * Creates an enumeration collection. Primary method.\n   *\n   * @param {string} typeName - The name of the enum collection.\n   * @param {Array} properties - Initialiser array.\n   * @param {Object} options - Options to determine behaviour.\n   * @returns {Function} The enumeration collection.\n   * @example\n   * var Enum = require('enumify-x');\n   *\n   * // Creating an Enum\n   * // Example allows duplicate values, known as aliases.\n   * // Member values can be anything: number, string, etc.. If the exact value is\n   * // unimportant you may use auto instances and an appropriate value will be\n   * // chosen for you. Care must be taken if you mix auto with other values.\n   * //\n   * // The class Color is an enumeration (or enum)\n   * // The attributes Color.RED, Color.GREEN, etc., are enumeration members\n   * // (or enum members) and are functionally constants.\n   * // The enum members have names and values (the name of Color.RED is RED,\n   * // value of Color.BLUE is 10, etc.)\n   * var Color = Enum.create('Color', [\n   *   'RED', // auto assign value, starting 0\n   *   'YELLOW', // auto assign value, will be 1\n   *   { name: 'BLUE', value: 10 },\n   *   'PINK', // auto assign value, will be 11\n   *   { name: 'BLACK', value: 1 } // This is an alias for YELLOW\n   * ]);\n   *\n   * Color.YELLOW; // { name: 'YELLOW', value: 1 }\n   * Color.BLUE.name; // 'BLUE'\n   * Color.BLUE.value; // 10\n   * Color.BLACK === Color.YELLOW; // true\n   * // Enumeration members have human readable string representations.\n   * Color.PINK.toString(); // 'Color.PINK'\n   * // Enums also have a human readable string representations.\n   * Color.toString(); // 'Color { \"RED\", \"YELLOW\", \"BLUE\", \"PINK\", \"BLACK\" }'\n   * // The type of an enumeration member is the enumeration it belongs to.\n   * Color.PINK instanceof Color; // true\n   * // You can access by value too.\n   * Color(10); // Color.BLUE\n   *\n   * // Enumeration members are hashable, so they can be used as property names.\n   * var apples = {};\n   * apples[Color.RED] = 'Red Delicious';\n   * apples[Color.YELLOW] = 'Golden Delicious'\n   * apples; // {Color.RED: 'Red Delicious', Color.YELLOW: 'Golden Delicious'}\n   *\n   * // Having two enum members with the same name is invalid\n   * var Fail = Enum.create('Fail', [\n   *   'RED',\n   *   'RED',\n   * ], opts);\n   *\n   * // However, two enum members are allowed to have the same value. Given two\n   * // members A and B with the same value (and A defined first), B is an alias\n   * // to A. By-value lookup of the value of A and B will return A. By-name\n   * // lookup of B will also return A. as seen in the definition of Color.\n   *\n   * // No aliases are allowed in this example.\n   * var opts = {\n   *   unique: true\n   * };\n   *\n   * var Color1 = Enum.create('Color1', [\n   *   'RED',\n   *   'YELLOW',\n   * ], opts);\n   *\n   * // Depending on the value types used, enumerations are serialisable.\n   * JSON.stringify(Color1); // '[{\"name\":\"RED\",\"value\":0},{\"name\":\"YELLOW\",\"value\":1}]'\n   *\n   * // Enumerations support iteration, in definition order.\n   * // The forEach() method executes a provided function once per each\n   * // name/value pair in the Enum object, in insertion order.\n   * // Iterating over the members of an enum does not provide the aliases.\n   * Color1.forEach(function (enumMember) {\n   *   console.log(enumMember.name, enumMember.value)\n   * }, thisArg);\n   *\n   * // Where supported, for..of can be used.\n   * // Iterating over the members of an enum does not provide the aliases.\n   * for (const { name, value } of Color1) {\n   *   console.log(name, value);\n   * }\n   *\n   * // Otherwise, standard iterator pattern.\n   * // Iterating over the members of an enum does not provide the aliases.\n   * var iter = Color1[Symbol.iterator]();\n   * var next = iter.next();\n   * while (next.done === false) {\n   *   var enumMember = next.value;\n   *   console.log(enumMember.name, enumMember.value)\n   *   next = iter.next();\n   * }\n   *\n   * // To iterate all items, including aliases.\n   * var allenumMembers = Color1.toJSON();\n   * allenumMembers.forEach(function(enumMember) {\n   *    console.log(enumMember.name, enumMember.value);\n   * });\n   *\n   * // Lookups can be perfomed on the value and not just the name.\n   * Color1(0) === Color1.RED; // true\n   * Color1(1) === Color1['YELLOW']; // true\n   *\n   * // Values can be anything, but names must be a string.\n   * var anotherEnum = Enum.create('anotherEnum', [\n   *   { name: 'OBJECT', value: {} },\n   *   { name: 'ARRAY', value: [] },\n   *   { name: 'FUNCTION', value: function () {} }\n   * ]);\n   *\n   * // Enums can be cloned\n   * var cloneEnum = Enum.create('cloneEnum', anotherEnum);\n   * cloneEnum === anotherEnum; // false\n   * cloneEnum.OBJECT === anotherEnum.OBJECT; // false\n   * cloneEnum.OBJECT.name === anotherEnum.OBJECT.name; // true\n   * cloneEnum.OBJECT.value === anotherEnum.OBJECT.value; // true\n   *\n   * // Options\n   * // unique: {boolean} - whether aliases are allowed.\n   * // auto: {Function} - if you wish to define your own auto value allocation.\n   * // classMethods: {Object<Function>} - to defined methods on the enum.\n   * // instanceMethods: {Object<Function>} - to defined methods on the enum members.\n   *\n   * // ------------------------------------------------------\n   *\n   * var opts1 = {\n   *   auto: function () {\n   *     return {\n   *       next: function (name, value) {\n   *         return name;\n   *       }\n   *     };\n   *   }\n   * };\n   *\n   * var subject1 = Enum.create('subject1', ['RED'], opts1);\n   * subject1.RED; // { name: 'RED', value: 'RED'}\n   *\n   * // ------------------------------------------------------\n   *\n   * var opts2 = {\n   *   classMethods: {\n   *     favourite: function () {\n   *       return this.RED;\n   *     }\n   *   }\n   * };\n   *\n   * var subject2 = Enum.create('subject2', ['RED'], opts2);\n   * subject2.favourite() === subject2.RED; // true\n   *\n   * // ------------------------------------------------------\n   *\n   * var opts3 = {\n   *   instanceMethods: {\n   *     description: function () {\n   *       return 'Description: ' + this.toString();\n   *     }\n   *   }\n   * };\n   *\n   * var subject3 = Enum.create('subject3', ['RED'], opts3);\n   * subject3.RED.description()) === 'Description: subject3.RED'; // true\n   */\n  create: {\n    value: function create(typeName, properties, options) {\n      const ctrName = String(typeName);\n\n      if (ctrName === 'undefined' || isVarName(ctrName) === false) {\n        throw new Error(`Invalid enum name: ${ctrName}`);\n      }\n\n      const opts = isObjectLike(options) ? options : {};\n      let CstmCtr;\n      let data;\n\n      // eslint-disable-next-line no-unused-vars\n      const construct = function _construct(context, args) {\n        const argsArr = [...args];\n\n        if (data) {\n          if (isObjectLike(context) && context instanceof CstmCtr) {\n            throw new SyntaxError('Enum classes can’t be instantiated');\n          }\n\n          return data.names.get(data.values.get(argsArr.shift()));\n        }\n\n        Enum.apply(context, argsArr);\n\n        return context;\n      };\n\n      // eslint-disable-next-line no-eval\n      CstmCtr = eval(`(0,function ${ctrName}(value){return construct(this,arguments)})`);\n\n      let asString;\n      Object.defineProperties(CstmCtr, {\n        forEach: {\n          value: function forEach(callback, thisArg) {\n            data.keys.forEach((key) => {\n              callback.call(thisArg, data.names.get(key));\n            });\n          },\n        },\n\n        toJSON: {\n          value: function toJSON() {\n            const value = [];\n            data.names.forEach((enumMember) => {\n              value.push(enumMember.toJSON());\n            });\n\n            return value;\n          },\n        },\n\n        toString: {\n          value: function _toString() {\n            if (typeof asString === 'undefined') {\n              asString = calcString(ctrName, data.names);\n            }\n\n            return asString;\n          },\n        },\n      });\n\n      Object.defineProperty(CstmCtr, Symbol.iterator, {\n        value: function iterator() {\n          const iter = data.keys[Symbol.iterator]();\n          const $next = function next() {\n            const nxt = iter.next();\n\n            return nxt.done\n              ? nxt\n              : {\n                  done: false,\n                  value: data.names.get(nxt.value),\n                };\n          };\n\n          return {\n            next: $next,\n          };\n        },\n      });\n\n      CstmCtr.prototype = Object.create(Enum.prototype);\n      Object.defineProperties(CstmCtr.prototype, {\n        constructor: {value: CstmCtr},\n        name: {value: ctrName},\n      });\n\n      if (isObjectLike(opts.classMethods)) {\n        Object.keys(opts.classMethods).forEach((key) => {\n          if (reserved.has(key)) {\n            throw new SyntaxError(`Name is reserved: ${key}`);\n          }\n\n          const method = opts.classMethods[key];\n\n          if (typeof method === 'function') {\n            Object.defineProperty(CstmCtr, key, {value: method});\n            reserved.add(key);\n          }\n        });\n      }\n\n      if (isObjectLike(opts.instanceMethods)) {\n        Object.keys(opts.instanceMethods).forEach((key) => {\n          if (reserved.has(key)) {\n            throw new SyntaxError(`Name is reserved: ${key}`);\n          }\n\n          const method = opts.instanceMethods[key];\n\n          if (typeof method === 'function') {\n            Object.defineProperty(CstmCtr.prototype, key, {value: method});\n            reserved.add(key);\n          }\n        });\n      }\n\n      data = initialise(CstmCtr, properties, opts);\n\n      return Object.freeze(CstmCtr);\n    },\n  },\n});\n","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","/*!\n * is-var-name | ISC (c) Shinnosuke Watanabe\n * https://github.com/shinnn/is-var-name\n*/\nexport default function isVarName(str) {\n\tif (typeof str !== 'string') {\n\t\treturn false;\n\t}\n\n\tif (str.trim() !== str) {\n\t\treturn false;\n\t}\n\n\ttry {\n\t\tnew Function(str, 'var ' + str);\n\t} catch (e) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n","/*!\r\n * js-logger - http://github.com/jonnyreeves/js-logger\r\n * Jonny Reeves, http://jonnyreeves.co.uk/\r\n * js-logger may be freely distributed under the MIT license.\r\n */\r\n(function (global) {\r\n\t\"use strict\";\r\n\r\n\t// Top level module for the global, static logger instance.\r\n\tvar Logger = { };\r\n\r\n\t// For those that are at home that are keeping score.\r\n\tLogger.VERSION = \"1.6.0\";\r\n\r\n\t// Function which handles all incoming log messages.\r\n\tvar logHandler;\r\n\r\n\t// Map of ContextualLogger instances by name; used by Logger.get() to return the same named instance.\r\n\tvar contextualLoggersByNameMap = {};\r\n\r\n\t// Polyfill for ES5's Function.bind.\r\n\tvar bind = function(scope, func) {\r\n\t\treturn function() {\r\n\t\t\treturn func.apply(scope, arguments);\r\n\t\t};\r\n\t};\r\n\r\n\t// Super exciting object merger-matron 9000 adding another 100 bytes to your download.\r\n\tvar merge = function () {\r\n\t\tvar args = arguments, target = args[0], key, i;\r\n\t\tfor (i = 1; i < args.length; i++) {\r\n\t\t\tfor (key in args[i]) {\r\n\t\t\t\tif (!(key in target) && args[i].hasOwnProperty(key)) {\r\n\t\t\t\t\ttarget[key] = args[i][key];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn target;\r\n\t};\r\n\r\n\t// Helper to define a logging level object; helps with optimisation.\r\n\tvar defineLogLevel = function(value, name) {\r\n\t\treturn { value: value, name: name };\r\n\t};\r\n\r\n\t// Predefined logging levels.\r\n\tLogger.TRACE = defineLogLevel(1, 'TRACE');\r\n\tLogger.DEBUG = defineLogLevel(2, 'DEBUG');\r\n\tLogger.INFO = defineLogLevel(3, 'INFO');\r\n\tLogger.TIME = defineLogLevel(4, 'TIME');\r\n\tLogger.WARN = defineLogLevel(5, 'WARN');\r\n\tLogger.ERROR = defineLogLevel(8, 'ERROR');\r\n\tLogger.OFF = defineLogLevel(99, 'OFF');\r\n\r\n\t// Inner class which performs the bulk of the work; ContextualLogger instances can be configured independently\r\n\t// of each other.\r\n\tvar ContextualLogger = function(defaultContext) {\r\n\t\tthis.context = defaultContext;\r\n\t\tthis.setLevel(defaultContext.filterLevel);\r\n\t\tthis.log = this.info;  // Convenience alias.\r\n\t};\r\n\r\n\tContextualLogger.prototype = {\r\n\t\t// Changes the current logging level for the logging instance.\r\n\t\tsetLevel: function (newLevel) {\r\n\t\t\t// Ensure the supplied Level object looks valid.\r\n\t\t\tif (newLevel && \"value\" in newLevel) {\r\n\t\t\t\tthis.context.filterLevel = newLevel;\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\t// Gets the current logging level for the logging instance\r\n\t\tgetLevel: function () {\r\n\t\t\treturn this.context.filterLevel;\r\n\t\t},\r\n\r\n\t\t// Is the logger configured to output messages at the supplied level?\r\n\t\tenabledFor: function (lvl) {\r\n\t\t\tvar filterLevel = this.context.filterLevel;\r\n\t\t\treturn lvl.value >= filterLevel.value;\r\n\t\t},\r\n\r\n\t\ttrace: function () {\r\n\t\t\tthis.invoke(Logger.TRACE, arguments);\r\n\t\t},\r\n\r\n\t\tdebug: function () {\r\n\t\t\tthis.invoke(Logger.DEBUG, arguments);\r\n\t\t},\r\n\r\n\t\tinfo: function () {\r\n\t\t\tthis.invoke(Logger.INFO, arguments);\r\n\t\t},\r\n\r\n\t\twarn: function () {\r\n\t\t\tthis.invoke(Logger.WARN, arguments);\r\n\t\t},\r\n\r\n\t\terror: function () {\r\n\t\t\tthis.invoke(Logger.ERROR, arguments);\r\n\t\t},\r\n\r\n\t\ttime: function (label) {\r\n\t\t\tif (typeof label === 'string' && label.length > 0) {\r\n\t\t\t\tthis.invoke(Logger.TIME, [ label, 'start' ]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\ttimeEnd: function (label) {\r\n\t\t\tif (typeof label === 'string' && label.length > 0) {\r\n\t\t\t\tthis.invoke(Logger.TIME, [ label, 'end' ]);\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// Invokes the logger callback if it's not being filtered.\r\n\t\tinvoke: function (level, msgArgs) {\r\n\t\t\tif (logHandler && this.enabledFor(level)) {\r\n\t\t\t\tlogHandler(msgArgs, merge({ level: level }, this.context));\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Protected instance which all calls to the to level `Logger` module will be routed through.\r\n\tvar globalLogger = new ContextualLogger({ filterLevel: Logger.OFF });\r\n\r\n\t// Configure the global Logger instance.\r\n\t(function() {\r\n\t\t// Shortcut for optimisers.\r\n\t\tvar L = Logger;\r\n\r\n\t\tL.enabledFor = bind(globalLogger, globalLogger.enabledFor);\r\n\t\tL.trace = bind(globalLogger, globalLogger.trace);\r\n\t\tL.debug = bind(globalLogger, globalLogger.debug);\r\n\t\tL.time = bind(globalLogger, globalLogger.time);\r\n\t\tL.timeEnd = bind(globalLogger, globalLogger.timeEnd);\r\n\t\tL.info = bind(globalLogger, globalLogger.info);\r\n\t\tL.warn = bind(globalLogger, globalLogger.warn);\r\n\t\tL.error = bind(globalLogger, globalLogger.error);\r\n\r\n\t\t// Don't forget the convenience alias!\r\n\t\tL.log = L.info;\r\n\t}());\r\n\r\n\t// Set the global logging handler.  The supplied function should expect two arguments, the first being an arguments\r\n\t// object with the supplied log messages and the second being a context object which contains a hash of stateful\r\n\t// parameters which the logging function can consume.\r\n\tLogger.setHandler = function (func) {\r\n\t\tlogHandler = func;\r\n\t};\r\n\r\n\t// Sets the global logging filter level which applies to *all* previously registered, and future Logger instances.\r\n\t// (note that named loggers (retrieved via `Logger.get`) can be configured independently if required).\r\n\tLogger.setLevel = function(level) {\r\n\t\t// Set the globalLogger's level.\r\n\t\tglobalLogger.setLevel(level);\r\n\r\n\t\t// Apply this level to all registered contextual loggers.\r\n\t\tfor (var key in contextualLoggersByNameMap) {\r\n\t\t\tif (contextualLoggersByNameMap.hasOwnProperty(key)) {\r\n\t\t\t\tcontextualLoggersByNameMap[key].setLevel(level);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t// Gets the global logging filter level\r\n\tLogger.getLevel = function() {\r\n\t\treturn globalLogger.getLevel();\r\n\t};\r\n\r\n\t// Retrieve a ContextualLogger instance.  Note that named loggers automatically inherit the global logger's level,\r\n\t// default context and log handler.\r\n\tLogger.get = function (name) {\r\n\t\t// All logger instances are cached so they can be configured ahead of use.\r\n\t\treturn contextualLoggersByNameMap[name] ||\r\n\t\t\t(contextualLoggersByNameMap[name] = new ContextualLogger(merge({ name: name }, globalLogger.context)));\r\n\t};\r\n\r\n\t// CreateDefaultHandler returns a handler function which can be passed to `Logger.setHandler()` which will\r\n\t// write to the window's console object (if present); the optional options object can be used to customise the\r\n\t// formatter used to format each log message.\r\n\tLogger.createDefaultHandler = function (options) {\r\n\t\toptions = options || {};\r\n\r\n\t\toptions.formatter = options.formatter || function defaultMessageFormatter(messages, context) {\r\n\t\t\t// Prepend the logger's name to the log message for easy identification.\r\n\t\t\tif (context.name) {\r\n\t\t\t\tmessages.unshift(\"[\" + context.name + \"]\");\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// Map of timestamps by timer labels used to track `#time` and `#timeEnd()` invocations in environments\r\n\t\t// that don't offer a native console method.\r\n\t\tvar timerStartTimeByLabelMap = {};\r\n\r\n\t\t// Support for IE8+ (and other, slightly more sane environments)\r\n\t\tvar invokeConsoleMethod = function (hdlr, messages) {\r\n\t\t\tFunction.prototype.apply.call(hdlr, console, messages);\r\n\t\t};\r\n\r\n\t\t// Check for the presence of a logger.\r\n\t\tif (typeof console === \"undefined\") {\r\n\t\t\treturn function () { /* no console */ };\r\n\t\t}\r\n\r\n\t\treturn function(messages, context) {\r\n\t\t\t// Convert arguments object to Array.\r\n\t\t\tmessages = Array.prototype.slice.call(messages);\r\n\r\n\t\t\tvar hdlr = console.log;\r\n\t\t\tvar timerLabel;\r\n\r\n\t\t\tif (context.level === Logger.TIME) {\r\n\t\t\t\ttimerLabel = (context.name ? '[' + context.name + '] ' : '') + messages[0];\r\n\r\n\t\t\t\tif (messages[1] === 'start') {\r\n\t\t\t\t\tif (console.time) {\r\n\t\t\t\t\t\tconsole.time(timerLabel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttimerStartTimeByLabelMap[timerLabel] = new Date().getTime();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif (console.timeEnd) {\r\n\t\t\t\t\t\tconsole.timeEnd(timerLabel);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tinvokeConsoleMethod(hdlr, [ timerLabel + ': ' +\r\n\t\t\t\t\t\t\t(new Date().getTime() - timerStartTimeByLabelMap[timerLabel]) + 'ms' ]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// Delegate through to custom warn/error loggers if present on the console.\r\n\t\t\t\tif (context.level === Logger.WARN && console.warn) {\r\n\t\t\t\t\thdlr = console.warn;\r\n\t\t\t\t} else if (context.level === Logger.ERROR && console.error) {\r\n\t\t\t\t\thdlr = console.error;\r\n\t\t\t\t} else if (context.level === Logger.INFO && console.info) {\r\n\t\t\t\t\thdlr = console.info;\r\n\t\t\t\t} else if (context.level === Logger.DEBUG && console.debug) {\r\n\t\t\t\t\thdlr = console.debug;\r\n\t\t\t\t} else if (context.level === Logger.TRACE && console.trace) {\r\n\t\t\t\t\thdlr = console.trace;\r\n\t\t\t\t}\r\n\r\n\t\t\t\toptions.formatter(messages, context);\r\n\t\t\t\tinvokeConsoleMethod(hdlr, messages);\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\t// Configure and example a Default implementation which writes to the `window.console` (if present).  The\r\n\t// `options` hash can be used to configure the default logLevel and provide a custom message formatter.\r\n\tLogger.useDefaults = function(options) {\r\n\t\tLogger.setLevel(options && options.defaultLevel || Logger.DEBUG);\r\n\t\tLogger.setHandler(Logger.createDefaultHandler(options));\r\n\t};\r\n\r\n\t// Export to popular environments boilerplate.\r\n\tif (typeof define === 'function' && define.amd) {\r\n\t\tdefine(Logger);\r\n\t}\r\n\telse if (typeof module !== 'undefined' && module.exports) {\r\n\t\tmodule.exports = Logger;\r\n\t}\r\n\telse {\r\n\t\tLogger._prevLogger = global.Logger;\r\n\r\n\t\tLogger.noConflict = function () {\r\n\t\t\tglobal.Logger = Logger._prevLogger;\r\n\t\t\treturn Logger;\r\n\t\t};\r\n\r\n\t\tglobal.Logger = Logger;\r\n\t}\r\n}(this));\r\n"],"sourceRoot":""}